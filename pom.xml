<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.magic.insightedge</groupId>
    <artifactId>magic-insightedge</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>

    <properties>
        <!--Toggling this property between provided/compile allows to run examples in cluster/IDE  -->
        <distribution.dependencies.scope>provided</distribution.dependencies.scope>
        <insightedge.version>1.0.0</insightedge.version>
        <xap.version>12.0.0</xap.version>
        <scala.version>2.10.4</scala.version>
        <kafka.version>0.9.0.0</kafka.version>
        <spark.version>1.6.0</spark.version>
    </properties>

    <repositories>
        <repository>
            <id>org.openspaces</id>
            <url>http://maven-repository.openspaces.org</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>org.openspaces</id>
            <url>http://maven-repository.openspaces.org</url>
        </pluginRepository>
    </pluginRepositories>

    <profiles>
        <profile>
            <id>run-from-ide</id>
            <properties>
                <distribution.dependencies.scope>compile</distribution.dependencies.scope>
            </properties>
        </profile>
    </profiles>

    <modules>
        <module>events-model</module>
        <module>events-producer</module>
        <module>events-aggregator-job</module>
        <module>space-model</module>
        <module>events-streaming</module>
    </modules>

    <dependencyManagement>

        <dependencies>

            <!-- IE -->
            <dependency>
                <groupId>org.gigaspaces.insightedge</groupId>
                <artifactId>insightedge-scala</artifactId>
                <scope>${distribution.dependencies.scope}</scope>
                <version>${insightedge.version}</version>
            </dependency>
            <dependency>
                <groupId>org.gigaspaces.insightedge</groupId>
                <artifactId>insightedge-core</artifactId>
                <scope>${distribution.dependencies.scope}</scope>
                <version>${insightedge.version}</version>
            </dependency>

            <!-- Kafka/Spark Streaming -->
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming-kafka_2.10</artifactId>
                <version>1.6.0</version>
            </dependency>

            <!-- Scala -->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-reflect</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-compiler</artifactId>
                <version>${scala.version}</version>
            </dependency>

            <!-- Kafka -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_2.10</artifactId>
                <version>2.2.4</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.scala-lang</groupId>
                        <artifactId>scala-library</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>